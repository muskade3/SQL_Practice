script:
create table events 
(userid int , 
event_type varchar(20),
event_time datetime);

insert into events VALUES (1, 'click', '2023-09-10 09:00:00');
insert into events VALUES (1, 'click', '2023-09-10 10:00:00');
insert into events VALUES (1, 'scroll', '2023-09-10 10:20:00');
insert into events VALUES (1, 'click', '2023-09-10 10:50:00');
insert into events VALUES (1, 'scroll', '2023-09-10 11:40:00');
insert into events VALUES (1, 'click', '2023-09-10 12:40:00');
insert into events VALUES (1, 'scroll', '2023-09-10 12:50:00');
insert into events VALUES (2, 'click', '2023-09-10 09:00:00');
insert into events VALUES (2, 'scroll', '2023-09-10 09:20:00');
insert into events VALUES (2, 'click', '2023-09-10 10:30:00');

Sol:-
with cte as(
    SELECT *,
           LAG(event_time, 1, event_time) OVER (PARTITION BY userid ORDER BY event_time ASC) AS prev
    FROM events),
    cte2 as(
    SELECT userid,
           event_type,
           event_time,prev,
           CASE 
               WHEN DATEDIFF(MINUTE, prev, event_time) <= 30 THEN 0 
               ELSE 1 
           END AS flag
    FROM cte),
    cte3 as(
    
SELECT *, 
        SUM(flag) OVER(PARTITION BY userid ORDER BY event_time) AS session_id 
        FROM cte2),
        cte4 as(
           
SELECT userid,
  session_id,
  MIN(event_time) as session_start_time,
 MAX(event_time)as session_end_time,
 COUNT(event_type) as event_count FROM CTE3
GROUP BY userid,session_id)

SELECT userid,session_id,
session_start_time,
session_end_time,
DATEDIFF(MINUTE,session_start_time,session_end_time) AS session_duration,
event_count
FROM cte4
ORDER BY userid


